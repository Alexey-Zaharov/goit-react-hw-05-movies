{"version":3,"file":"static/js/134.2b1c466f.chunk.js","mappings":"6LAoFA,UAjFe,WAAO,IAAD,EACnB,GAAoCA,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAW,UAAGJ,EAAaK,IAAI,sBAApB,QAAsC,IAEvDC,EAAAA,EAAAA,YAAU,WACY,KAAhBF,EAIJG,MAAM,2GAAD,OACwGH,EADxG,gCAGFI,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,MAEnB,IACAH,KAAKZ,GACLgB,OAAM,SAAAC,GAAK,OAAIC,OAAOC,MAAMF,EAAjB,IACXG,QAAQlB,EAAUM,IAbnBN,EAAU,GAcb,GAAE,CAACM,IAyBJ,OACE,4BACE,kBAAMa,SAAU,SAAAC,GAAK,OAzBR,SAAAA,GAEf,OADAA,EAAMC,iBACED,EAAME,cAAcC,SAASC,OAAOC,MAAMC,QAChD,IAAK,GACHvB,EAAgB,CAAC,GACjBa,OAAOC,MAAP,+BACA,MACF,KAAKX,EACHU,OAAOC,MAAP,+CAAqDX,EAArD,MACA,MACF,QACEH,EAAgB,CACdG,YAAac,EAAME,cAAcC,SAASC,OAAOC,QASxD,CAI4BN,CAASC,EAAb,EAArB,WACE,kBACEO,SAAU,SAAAP,GAAK,OAAIpB,EAAUoB,EAAMQ,OAAOH,MAA3B,EACfI,KAAK,SACLC,KAAK,OACLL,MAAO1B,EACPgC,aAAa,MACbC,WAAS,EACTC,YAAY,kBAGd,mBAAQH,KAAK,SAAb,uBAEe,KAAhBxB,IACC,wBACGT,EAAWqC,SACVrC,EAAWqC,QAAQC,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MAC5B,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMpC,GAA1C,SACGiC,KAFID,EAMZ,QAKZ,C","sources":["pages/Movies.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchData, setSearchData] = useState([]);\n  const [filter, setFilter] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const saerchValue = searchParams.get('saerchValue') ?? '';\n\n  useEffect(() => {\n    if (saerchValue === '') {\n      setFilter('');\n      return;\n    }\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=631b0300fdf69969f8e6b4e2073a8abc&language=en-US&query=${saerchValue}&page=1&include_adult=false`\n    )\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n      })\n      .then(setSearchData)\n      .catch(error => window.alert(error))\n      .finally(setFilter(saerchValue));\n  }, [saerchValue]);\n\n  const onSubmit = event => {\n    event.preventDefault();\n    switch (event.currentTarget.elements.search.value.trim()) {\n      case '':\n        setSearchParams({});\n        window.alert(`WHOOPS!!! No data to search`);\n        break;\n      case saerchValue:\n        window.alert(`WHOOPS!!! You are alredy looking on \"${saerchValue}\"`);\n        break;\n      default:\n        setSearchParams({\n          saerchValue: event.currentTarget.elements.search.value,\n        });\n\n      // event.currentTarget.elements.search.value.trim() === ''\n      //   ? setSearchParams({})\n      //   : setSearchParams({\n      //       saerchValue: event.currentTarget.elements.search.value,\n      //     });\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={event => onSubmit(event)}>\n        <input\n          onChange={event => setFilter(event.target.value)}\n          name=\"search\"\n          type=\"text\"\n          value={filter}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n        />\n\n        <button type=\"submit\">Search</button>\n      </form>\n      {saerchValue !== '' && (\n        <ul>\n          {searchData.results &&\n            searchData.results.map(({ id, title }) => {\n              return (\n                <li key={id}>\n                  <Link to={`/movies/${id}`} state={{ from: location }}>\n                    {title}\n                  </Link>\n                </li>\n              );\n            })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["useState","searchData","setSearchData","filter","setFilter","useSearchParams","searchParams","setSearchParams","location","useLocation","saerchValue","get","useEffect","fetch","then","response","ok","json","catch","error","window","alert","finally","onSubmit","event","preventDefault","currentTarget","elements","search","value","trim","onChange","target","name","type","autoComplete","autoFocus","placeholder","results","map","id","title","to","state","from"],"sourceRoot":""}