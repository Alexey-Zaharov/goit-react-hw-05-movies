{"version":3,"file":"static/js/823.eb5f6045.chunk.js","mappings":"mOAwCA,EApCkB,SAAC,GAAwD,IAAtDA,EAAqD,EAArDA,SAAUC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAC3D,OACE,iBAAKC,UAAU,iBAAf,WACE,SAAC,KAAD,CAAMC,GAAIN,EAAUK,UAAU,YAA9B,sBAGA,iBAAKA,UAAU,aAAf,WACE,gBACEE,IAAKN,GAAW,yCAAsCA,GACtDO,IAAKN,KAEP,4BACE,wBAAKA,KACL,sCACA,uBAAIC,KACJ,oCACA,wBACGC,GACCA,EAAOK,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACZ,OAAO,0BAAgBA,EAAhB,MAASA,EACjB,cAMd,EC8BD,EAjDqB,WAAO,IAAD,IACzB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXjB,GAAWkB,EAAAA,EAAAA,QAAM,oBAACF,EAASG,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAC1CC,GAAWC,EAAAA,EAAAA,MAiBjB,OAfAC,EAAAA,EAAAA,YAAU,WACRC,MAAM,sCAAD,OACmCV,EADnC,6DAGFW,MAAK,SAAAC,GACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEbF,EAASC,IACZN,EAAS,UAAW,CAAEQ,SAAS,GAElC,IACAJ,KAAKZ,GACLiB,OAAM,SAAAC,GAAK,OAAIC,OAAOC,MAAMF,EAAjB,GACf,GAAE,CAACjB,EAASO,KAEX,2BACGT,IACC,SAAC,EAAD,CACEX,YAAaW,EAAMX,YACnBC,MAAOU,EAAMV,MACbC,SAAUS,EAAMT,SAChBC,OAAQQ,EAAMR,OACdJ,SAAUA,EAASkC,WAGvB,kDACA,2BACE,yBACE,SAAC,KAAD,CAAM5B,GAAG,OAAT,sBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAA6B,SAAD,CAAUC,UAAU,yCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './MovieInfo.css';\n\nconst MovieInfo = ({ backLink, poster_path, title, overview, genres }) => {\n  return (\n    <div className=\"movi-container\">\n      <Link to={backLink} className=\"back-link\">\n        Go back\n      </Link>\n      <div className=\"movie-info\">\n        <img\n          src={poster_path && `https://image.tmdb.org/t/p/w300${poster_path}`}\n          alt={title}\n        />\n        <div>\n          <h2>{title}</h2>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <ul>\n            {genres &&\n              genres.map(({ name }) => {\n                return <li key={name}>{name}.</li>;\n              })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMovieInfo.propTypes = {\n  poster_path: PropTypes.string,\n  title: PropTypes.string,\n  overview: PropTypes.string,\n  genres: PropTypes.array,\n  backLink: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default MovieInfo;\n","import {\n  Outlet,\n  Link,\n  useParams,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport { useEffect, useState, useRef, Suspense } from 'react';\nimport React from 'react';\nimport MovieInfo from '../components/MovieInfo/MovieInfo';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=631b0300fdf69969f8e6b4e2073a8abc&language=en-US`\n    )\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n        if (!response.ok) {\n          navigate('/movies', { replace: true });\n        }\n      })\n      .then(setMovie)\n      .catch(error => window.alert(error));\n  }, [movieId, navigate]);\n  return (\n    <div>\n      {movie && (\n        <MovieInfo\n          poster_path={movie.poster_path}\n          title={movie.title}\n          overview={movie.overview}\n          genres={movie.genres}\n          backLink={backLink.current}\n        />\n      )}\n      <p>Aditional information</p>\n      <ul>\n        <li>\n          <Link to=\"cast\">Casts</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading....</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["backLink","poster_path","title","overview","genres","className","to","src","alt","map","name","useState","movie","setMovie","movieId","useParams","location","useLocation","useRef","state","from","navigate","useNavigate","useEffect","fetch","then","response","ok","json","replace","catch","error","window","alert","current","Suspense","fallback"],"sourceRoot":""}